apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'


android {
    signingConfigs {
        config {
            keyAlias 'hbuilder'
            keyPassword '123456'
            storeFile file('C:/Users/Administrator/Desktop/H5Sign/HBuilder.jks')
            storePassword '123456'
        }
    }
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.myplas.l"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.config
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

/*使用AspectJ的编译器*/
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.aspectj:aspectjtools:1.8.8'
        classpath 'org.aspectj:aspectjweaver:1.8.8'
    }
}

dependencies {
    testImplementation 'junit:junit:4.12'

    //noinspection GradleCompatible
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    /*城市选择器*/
    compile project(path: ':cityPicker')
    /*AspectJ*/
    implementation files('libs/aspectjrt.jar')
    /*Glide*/
    implementation files('libs/glide-3.6.1.jar')

    /*图片选择*/
    implementation 'com.yanzhenjie:album:1.0.7'
    implementation 'com.yanzhenjie:durban:1.0.1'

    /*高德地图*/
    implementation 'com.amap.api:3dmap:6.0.1'
    implementation 'com.amap.api:search:5.7.0'
    implementation 'com.amap.api:location:3.8.0'

    /*RxJava 和RxAndroid*/
    implementation 'io.reactivex:rxjava:1.3.2'
    implementation 'io.reactivex:rxandroid:1.2.1'

    implementation 'com.google.code.gson:gson:2.8.2'
    /*retrofit*/
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    /*转换器，请求结果转换成Model*/
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    /*配合Rxjava 使用*/
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.3.0'

    /*TabLayout*/
    implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'
    /*底部导航栏*/
    implementation 'com.ashokvarma.android:bottom-navigation-bar:2.0.4'
    /*自定义弹窗*/
    implementation 'com.github.huangbryant210707:HIndicatorDialog:2.3.3'



}

/*方便使用android的Log打印日志*/
import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

final def log = project.logger
final def variants = project.android.applicationVariants

variants.all { variant ->
    if (!variant.buildType.isDebuggable()) {
        log.debug("Skipping non-debuggable build type '${variant.buildType.name}'.")
        return;
    }

    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.8",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
        log.debug "ajc args: " + Arrays.toString(args)

        MessageHandler handler = new MessageHandler(true);
        new Main().run(args, handler);
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break;
                case IMessage.WARNING:
                    log.warn message.message, message.thrown
                    break;
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break;
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break;
            }
        }
    }
}
